@startuml Blackjack
left to right direction
skinparam classAttributeIconSize 0
skinparam classFontSize 12
skinparam classFontName "Arial"
skinparam classBackgroundColor #F0F0F0

class Suit {
    Spades = "♠"
    Hearts = "♥"
    Diamonds = "♦"
    Clubs = "♣"
    __init__()
}
class Rank {
    __init__()
}
class Card {
    get_point()
    __eq__()
    __str__()
    suit : Suit 
    rank : Rank 
    point : int
    __init__(suit: Suit , rank: Rank )
}
Enum <|-- Suit
Enum <|-- Rank
Card --> Suit
Card --> Rank

class Deck {
    shuffle()
    burn_out()
    deal_card()
    __str__()
    __len__()
    __init__()
    cards : list[Card]
}
Deck --> Card

class Hand {
    add_card()
    __evalue()
    __potential_evalue()
    points()
    potiential_points()
    is_blackjack()
    is_bust()
    cards: list[Card]
    is_soft: bool
    __str__()
    __eq__()
    __init__()
}
class PlayerHand {
    bet()
    is_initial()
    is_initial(value: bool )
    doubled()
    add_bet()
    mark_as_doubled()
    has_pair()
    split()
    __bet: int
    __doubled: bool
    __is_initial: bool
    __init__()
}
' object <|-- Hand
Hand <|-- PlayerHand

class Player {
    init_hand()
    get_bank_amount()
    get_insurance_amount()
    has_pair()
    stand()
    hit()
    double()
    can_double()
    split()
    insurance()
    __move_to_nex_hand()
    done_with_hand()
    is_all_done()
    get_hand()
    get_bet()
    get_all_hands()
    get_insurance_rate()
    get_all_bets()
    get_bank_and_bets()
    pay_out()
    __reset()
    __str__()
    __id : int
    __bank : int
    __hand : PlayerHand
    __insuranced : int
    __main_bet : int
    __init__()
}
' object <|-- Player
Player --> PlayerHand

class Dealer {
    init_hand()
    hits()
    is_blackjack()
    reveal_hand()
    get_face_point()
    get_face_card()
    get_hand()
    is_bust()
    reset()
    get_hiden_card()
    __add_hiden_back()
    __str__()
    __init__()
    __hiden_card:Card
    __hand: Hand
}
' object <|-- Dealer
Dealer --> Hand
Dealer --> Card

class Action {
    Stand
    Hit
    Split
    Double
    Insurance
    __init__()
}
class Interaction {
    cash_in_chips()
    get_init_bet()
    get_action()
    __init__()
}
class State {
    __str__()
    __dealer_hand : Hand 
    __player_hand : PlayerHand 
    __init__(__dealer_hand: Hand , __player_hand: PlayerHand )
}
class BlackJackGame {
    __init_player()
    __init_hands()
    _get_state()
    _print_final_state()
    _get_possible_actions()
    _get_insurance_reward()
    _get_hand_reward()
    step()
    round()
    play()
    reset()
    deck : Deck
    dealer : Dealer
    player : Player
    state_action_history : list[tuple[State, Action]]
    __can_insure : bool
    __init__(__can_insure: bool , __can_insure: bool )
}
Enum <|-- Action
State --> Hand
State --> PlayerHand
BlackJackGame --> Action
BlackJackGame --> Deck
BlackJackGame --> Dealer
BlackJackGame --> Player
BlackJackGame --> Interaction
@enduml